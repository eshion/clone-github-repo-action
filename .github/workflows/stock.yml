name: stock

# 触发条件
on:
  workflow_dispatch:
  # 定时触发，UTC->Beijing 00:00->08:00
  # schedule:
  #   - cron: '30 16 * * *'

jobs:
    
  job1:
    runs-on: ubuntu-latest
    steps:      
      - name: 迁出代码
        uses: eshion/clone-github-repo-action@main
        with:
          owner: 'eshion'
          repository: 'stock'
          access-token: ${{ secrets.ACCESS_TOKEN }} 
      - name: 创建分支
        run: |
          cd stock
          git config core.ignorecase false
          git config --global credential.helper cache
          git config --local user.email "eshion@qq.com"
          git config --local user.name "eshion"
          git checkout -b "关键指标3"
          git branch --set-upstream-to=origin/main 关键指标3
          git pull
          git fetch origin
          git merge origin/main
      - name: 安装Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        env:
          ACCESS_TOKEN: '${{ secrets.ACCESS_TOKEN }}'
      - name: 加载缓存
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache/test.py
          key: ${{ runner.os }}-file1-${{ hashFiles('/tmp/.buildx-cache/test.py') }}
          restore-keys: |
            ${{ runner.os }}-file1-
      - name: 设置时区
        run: sudo timedatectl set-timezone 'Asia/Shanghai'
      - name: 安装依赖
        run: |
          # cd stock
          # pip install -r requirements.txt
      - name: 执行任务
        env:
          ENV_START: '3'
        run: |
          cd stock
          # python tools/get_latest_gjzb.py
          mkdir -p /tmp/.buildx-cache
          cp ./tools/test.py /tmp/.buildx-cache


  job2:
    runs-on: ubuntu-latest
    steps:      
      - name: 迁出代码
        uses: eshion/clone-github-repo-action@main
        with:
          owner: 'eshion'
          repository: 'stock'
          access-token: ${{ secrets.ACCESS_TOKEN }} 
      - name: 创建分支
        run: |
          cd stock
          git config core.ignorecase false
          git config --global credential.helper cache
          git config --local user.email "eshion@qq.com"
          git config --local user.name "eshion"
          git checkout -b "关键指标3"
          git branch --set-upstream-to=origin/main 关键指标3
          git pull
          git fetch origin
          git merge origin/main
      - name: 安装Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        env:
          ACCESS_TOKEN: '${{ secrets.ACCESS_TOKEN }}'
      - name: 加载缓存
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache/merge_to_stock.py
          key: ${{ runner.os }}-file1-${{ hashFiles('/tmp/.buildx-cache/merge_to_stock.py') }}
          restore-keys: |
            ${{ runner.os }}-file1-
      - name: 设置时区
        run: sudo timedatectl set-timezone 'Asia/Shanghai'
      - name: 安装依赖
        run: |
          # cd stock
          # pip install -r requirements.txt
      - name: 执行任务
        env:
          ENV_START: '3'
        run: |
          cd stock
          # python tools/get_latest_gjzb.py
          mkdir -p /tmp/.buildx-cache
          cp ./tools/merge_to_stock.py /tmp/.buildx-cache

  job3:
    runs-on: ubuntu-latest
    needs:
      - job1
      - job2
    steps:      
      - name: 迁出代码
        uses: eshion/clone-github-repo-action@main
        with:
          owner: 'eshion'
          repository: 'stock'
          access-token: ${{ secrets.ACCESS_TOKEN }} 
      - name: 创建分支
        run: |
          cd stock
          git config core.ignorecase false
          git config --global credential.helper cache
          git config --local user.email "eshion@qq.com"
          git config --local user.name "eshion"
          git checkout -b "关键指标3"
          git branch --set-upstream-to=origin/main 关键指标3
          git pull
          git fetch origin
          git merge origin/main
      - name: 安装Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        env:
          ACCESS_TOKEN: '${{ secrets.ACCESS_TOKEN }}'
      - name: 设置时区
        run: sudo timedatectl set-timezone 'Asia/Shanghai'
      - name: 安装依赖
        run: |
          # cd stock
          # pip install -r requirements.txt
      - name: Restore file
        run: |
          cat /tmp/.buildx-cache/test.py
          cat /tmp/.buildx-cache/merge_to_stock.py